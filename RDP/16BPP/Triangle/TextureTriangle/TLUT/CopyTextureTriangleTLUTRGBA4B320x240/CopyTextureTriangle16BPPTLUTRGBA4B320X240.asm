// N64 'Bare Metal' 16BPP 320x240 Copy Texture Triangle TLUT RGBA4B RDP Demo by krom (Peter Lemon):
arch n64.cpu
endian msb
output "CopyTextureTriangle16BPPTLUTRGBA4B320X240.N64", create
fill 1052672 // Set ROM Size

origin $00000000
base $80000000 // Entry Point Of Code
include "LIB/N64.INC" // Include N64 Definitions
include "LIB/N64_HEADER.ASM" // Include 64 Byte Header & Vector Table
insert "LIB/N64_BOOTCODE.BIN" // Include 4032 Byte Boot Code

Start:
  include "LIB/N64_GFX.INC" // Include Graphics Macros
  N64_INIT() // Run N64 Initialisation Routine

  ScreenNTSC(320, 240, BPP16|AA_MODE_2, $A0100000) // Screen NTSC: 320x240, 16BPP, Resample Only, DRAM Origin $A0100000

  WaitScanline($200) // Wait For Scanline To Reach Vertical Blank

  DPC(RDPBuffer, RDPBufferEnd) // Run DPC Command Buffer: Start, End

Loop:
  j Loop
  nop // Delay Slot

align(8) // Align 64-Bit
RDPBuffer:
arch n64.rdp
  Set_Scissor 0<<2,0<<2, 0,0, 320<<2,240<<2 // Set Scissor: XH 0.0,YH 0.0, Scissor Field Enable Off,Field Off, XL 320.0,YL 240.0
  Set_Other_Modes CYCLE_TYPE_FILL // Set Other Modes
  Set_Color_Image IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,320-1, $00100000 // Set Color Image: FORMAT RGBA,SIZE 16B,WIDTH 320, DRAM ADDRESS $00100000
  Set_Fill_Color $FF01FF01 // Set Fill Color: PACKED COLOR 16B R5G5B5A1 Pixels
  Fill_Rectangle 319<<2,239<<2, 0<<2,0<<2 // Fill Rectangle: XL 319.0,YL 239.0, XH 0.0,YH 0.0

  Set_Other_Modes CYCLE_TYPE_COPY|EN_TLUT|ALPHA_COMPARE_EN // Set Other Modes

  Set_Texture_Image IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,1-1, Tlut // Set Texture Image: FORMAT RGBA,SIZE 16B,WIDTH 1, Tlut DRAM ADDRESS
  Set_Tile 0,0,0, $100, 0,0, 0,0,0,0, 0,0,0,0 // Set Tile: TMEM Address $100, Tile 0
  Load_Tlut 0<<2,0<<2, 0, 47<<2,0<<2 // Load Tlut: SL 0.0,TL 0.0, Tile 0, SH 47.0,TH 0.0

  Sync_Tile // Sync Tile
  Set_Texture_Image IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,4-1, Texture16x16 // Set Texture Image: FORMAT RGBA,SIZE 16B,WIDTH 4, Texture16x16 DRAM ADDRESS
  Set_Tile IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,1, $000, 0,0, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT RGBA,SIZE 16B,Tile Line Size 1 (64bit Words), TMEM Address $000, Tile 0
  Load_Tile 0<<2,0<<2, 0, 15<<2,15<<2 // Load Tile: SL 0.0,TL 0.0, Tile 0, SH 15.0,TH 15.0
  Sync_Tile // Sync Tile
  Set_Tile IMAGE_DATA_FORMAT_COLOR_INDX,SIZE_OF_PIXEL_4B,1, $000, 0,PALETTE_0, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT COLOR INDEX,SIZE 4B,Tile Line Size 1 (64bit Words), TMEM Address $000, Tile 0,Palette 0
  // Right Major Triangle (Dir=1)
  //
  //      DxMDy
  //      .___. v[2]:XH,XM(X:68.0) YH(Y:114.0), v[1]:XL(X:83.0) YM(Y:114.0)
  //      |  /
  // DxHDy| /DxLDy
  //      ./    v[0]:(X:68.0) YL(Y:129.0)
  //
  // Output: Dir 1,Level 0,Tile 0, YL 129.0,YM 114.0,YH 114.0, XL 83.0,DxLDy -1.0, XH 68.0,DxHDy 0.0, XM 68.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 516,456,456, 83,0,-1,0, 68,0,0,0, 68,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 0.0,T 0.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe 0.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 0,0,0, 128,0,0, 0,0,0, 0,0,0, 0,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf
  // Right Major Triangle (Dir=1)
  //
  //        . v[2]:XH,XM(X:83.0) YH(Y:115.0)
  //       /|
  // DxHDy/ |DxMDy
  //    ./__. v[0]:(X:68.0) YL(Y:130.0), v[1]:XL(X:83.0) YM(Y:130.0)
  //    DxLDy
  //
  // Output: Dir 1,Level 0,Tile 0, YL 130.0,YM 130.0,YH 115.0, XL 83.0,DxLDy 0.0, XH 83.0,DxHDy -1.0, XM 83.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 520,520,460, 83,0,0,0, 83,0,-1,0, 83,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 496.0,T 32.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe -32.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 496,32,0, 128,0,0, 0,0,0, 0,0,0, -32,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf

  Sync_Tile // Sync Tile
  Set_Texture_Image IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,8-1, Texture32x32 // Set Texture Image: FORMAT RGBA,SIZE 16B,WIDTH 8, Texture32x32 DRAM ADDRESS
  Set_Tile IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,2, $000, 0,0, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT RGBA,SIZE 16B,Tile Line Size 2 (64bit Words), TMEM Address $000, Tile 0
  Load_Tile 0<<2,0<<2, 0, 31<<2,31<<2 // Load Tile: SL 0.0,TL 0.0, Tile 0, SH 31.0,TH 31.0
  Sync_Tile // Sync Tile
  Set_Tile IMAGE_DATA_FORMAT_COLOR_INDX,SIZE_OF_PIXEL_4B,2, $000, 0,PALETTE_1, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT COLOR INDEX,SIZE 4B,Tile Line Size 2 (64bit Words), TMEM Address $000, Tile 0,Palette 1
  // Right Major Triangle (Dir=1)
  //
  //      DxMDy
  //      .___. v[2]:XH,XM(X:144.0) YH(Y:98.0), v[1]:XL(X:175.0) YM(Y:98.0)
  //      |  /
  // DxHDy| /DxLDy
  //      ./    v[0]:(X:144.0) YL(Y:129.0)
  //
  // Output: Dir 1,Level 0,Tile 0, YL 129.0,YM 98.0,YH 98.0, XL 175.0,DxLDy -1.0, XH 144.0,DxHDy 0.0, XM 144.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 516,392,392, 175,0,-1,0, 144,0,0,0, 144,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 0.0,T 0.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe 0.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 0,0,0, 128,0,0, 0,0,0, 0,0,0, 0,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf
  // Right Major Triangle (Dir=1)
  //
  //        . v[2]:XH,XM(X:175.0) YH(Y:99.0)
  //       /|
  // DxHDy/ |DxMDy
  //    ./__. v[0]:(X:144.0) YL(Y:130.0), v[1]:XL(X:175.0) YM(Y:130.0)
  //    DxLDy
  //
  // Output: Dir 1,Level 0,Tile 0, YL 130.0,YM 130.0,YH 99.0, XL 175.0,DxLDy 0.0, XH 175.0,DxHDy -1.0, XM 175.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 520,520,396, 175,0,0,0, 175,0,-1,0, 175,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 992.0,T 32.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe -32.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 992,32,0, 128,0,0, 0,0,0, 0,0,0, -32,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf

  Sync_Tile // Sync Tile
  Set_Texture_Image IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,16-1, Texture64x64 // Set Texture Image: FORMAT RGBA,SIZE 16B,WIDTH 16, Texture64x64 DRAM ADDRESS
  Set_Tile IMAGE_DATA_FORMAT_RGBA,SIZE_OF_PIXEL_16B,4, $000, 0,0, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT RGBA,SIZE 16B,Tile Line Size 4 (64bit Words), TMEM Address $000, Tile 0
  Load_Tile 0<<2,0<<2, 0, 63<<2,63<<2 // Load Tile: SL 0.0,TL 0.0, Tile 0, SH 63.0,TH 63.0
  Sync_Tile // Sync Tile
  Set_Tile IMAGE_DATA_FORMAT_COLOR_INDX,SIZE_OF_PIXEL_4B,4, $000, 0,PALETTE_2, 0,0,0,0, 0,0,0,0 // Set Tile: FORMAT COLOR INDEX,SIZE 4B,Tile Line Size 4 (64bit Words), TMEM Address $000, Tile 0,Palette 2
  // Right Major Triangle (Dir=1)
  //
  //      DxMDy
  //      .___. v[2]:XH,XM(X:228.0) YH(Y:66.0), v[1]:XL(X:291.0) YM(Y:66.0)
  //      |  /
  // DxHDy| /DxLDy
  //      ./    v[0]:(X:228.0) YL(Y:129.0)
  //
  // Output: Dir 1,Level 0,Tile 0, YL 129.0,YM 66.0,YH 66.0, XL 175.0,DxLDy -1.0, XH 144.0,DxHDy 0.0, XM 144.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 516,264,264, 291,0,-1,0, 228,0,0,0, 228,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 0.0,T 0.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe 0.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 0,0,0, 128,0,0, 0,0,0, 0,0,0, 0,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf
  // Right Major Triangle (Dir=1)
  //
  //        . v[2]:XH,XM(X:291.0) YH(Y:67.0)
  //       /|
  // DxHDy/ |DxMDy
  //    ./__. v[0]:(X:228.0) YL(Y:130.0), v[1]:XL(X:291.0) YM(Y:130.0)
  //    DxLDy
  //
  // Output: Dir 1,Level 0,Tile 0, YL 130.0,YM 130.0,YH 67.0, XL 291.0,DxLDy 0.0, XH 291.0,DxHDy -1.0, XM 291.0,DxMDy 0.0
     Texture_Triangle 1,0,0, 520,520,268, 291,0,0,0, 291,0,-1,0, 291,0,0,0 // Generated By N64RightMajorTriangleCalc.py
  // Output: S 2016.0,T 32.0,W 0.0, DsDx 128.0,DtDx 0.0,DwDx 0.0, DsDe -32.0,DtDe 32.0,DwDe 0.0, DsDy 0.0,DtDy 0.0,DwDy 0.0
     Texture_Coefficients 2016,32,0, 128,0,0, 0,0,0, 0,0,0, -32,32,0, 0,0,0, 0,0,0, 0,0,0 // S,T,W, DsDx,DtDx,DwDx, Sf,Tf,Wf, DsDxf,DtDxf,DwDxf, DsDe,DtDe,DwDe, DsDy,DtDy,DwDy, DsDef,DtDef,DwDef, DsDyf,DtDyf,DwDyf

  Sync_Full // Ensure Entire Scene Is Fully Drawn
RDPBufferEnd:

Texture16x16:
  db $33,$00,$00,$02,$20,$00,$00,$00 // 16x16x4B = 128 Bytes
  db $33,$00,$00,$21,$12,$00,$00,$00
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$21,$11,$11,$12,$00,$00
  db $00,$02,$11,$11,$11,$11,$20,$00
  db $00,$21,$11,$11,$11,$11,$12,$00
  db $02,$11,$11,$11,$11,$11,$11,$20
  db $21,$11,$11,$11,$11,$11,$11,$12
  db $21,$11,$11,$11,$11,$11,$11,$12
  db $22,$22,$22,$11,$11,$22,$22,$22
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$02,$11,$11,$20,$00,$00
  db $00,$00,$02,$22,$22,$20,$00,$00

Texture32x32:
  db $33,$33,$00,$00,$00,$00,$00,$02,$20,$00,$00,$00,$00,$00,$00,$00 // 32x32x4B = 512 Bytes
  db $33,$33,$00,$00,$00,$00,$00,$21,$12,$00,$00,$00,$00,$00,$00,$00
  db $33,$33,$00,$00,$00,$00,$02,$11,$11,$20,$00,$00,$00,$00,$00,$00
  db $33,$33,$00,$00,$00,$00,$21,$11,$11,$12,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00
  db $00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00
  db $00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00
  db $00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00
  db $00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00
  db $00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00
  db $00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00
  db $00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00
  db $02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20
  db $21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12
  db $21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12
  db $22,$22,$22,$22,$22,$22,$11,$11,$11,$11,$22,$22,$22,$22,$22,$22
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$22,$22,$22,$22,$20,$00,$00,$00,$00,$00

Texture64x64:
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 // 64x64x4B = 2048 Bytes
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $33,$33,$33,$33,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00
  db $00,$00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00,$00
  db $00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00
  db $00,$00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00,$00
  db $00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00
  db $00,$00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00,$00
  db $00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00
  db $00,$21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12,$00
  db $02,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$20
  db $21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12
  db $21,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$11,$12
  db $22,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22,$11,$11,$11,$11,$11,$11,$11,$11,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22,$22
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$11,$11,$11,$11,$11,$11,$11,$11,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
  db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$22,$22,$22,$22,$22,$22,$22,$22,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

Tlut:
  dw $0000,$FFFF,$0001,$F001,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000 // 4B Palette 0 (4x16B = 8 Bytes)
  dw $0000,$F0FF,$0001,$F001,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000 // 4B Palette 1
  dw $0000,$0FFF,$0001,$F001,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000 // 4B Palette 2